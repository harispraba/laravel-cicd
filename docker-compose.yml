version: "3.8"
name: laravel-app
services:
  laravel-filament:
    image: DOCKER_URL
    container_name: laravel-filament
    restart: always
    pull_policy: always
    env_file: .env.production
    volumes:
      - web-app:/var/www
      - /opt/deployment-manifests/.env.production:/var/www/.env
    depends_on:
      - mysql
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000"]
      interval: 1m
      timeout: 10s
      retries: 3

  webserver:
    image: nginx:1.27.0-alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - web-app:/var/www
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - backend
    depends_on:
      - laravel-filament
    healthcheck:
      test: ["CMD", "curl", "-f", "http://laravel-filament:9000"]
      interval: 1m
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_HOST: 0.0.0.0
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_RANDOM_ROOT_PASSWORD: no
    networks:
      - backend
    volumes:
      - mysql-data:/var/lib/mysql
      # - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql << For importing sql file
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 1m
      timeout: 10s
      retries: 3

networks:
  backend:
    name: backend
    driver: bridge
volumes:
  web-app:
    name: web-app
    driver: local
  mysql-data:
    name: mysql-data
    driver: local
